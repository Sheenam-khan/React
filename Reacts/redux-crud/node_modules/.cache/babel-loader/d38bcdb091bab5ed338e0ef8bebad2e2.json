{"ast":null,"code":"var _jsxFileName = \"/home/seenam/Desktop/MERN-Stack-CRUD/mern-stack-client/src/components/PostMessages.js\";\nimport React, { useEffect, useState, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../actions/postMessage\";\nimport { Grid, Paper, withStyles, List, ListItem, ListItemText, Typography, Divider, Button } from \"@material-ui/core\";\nimport PostMessageForm from \"./PostMessageForm\";\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(3),\n    padding: theme.spacing(2)\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  },\n  actionDiv: {\n    textAlign: \"center\"\n  }\n});\n\nconst PostMessages = ({\n  classes,\n  ...props\n}) => {\n  console.log(props); //const {classes, ...props} = props\n\n  const [currentId, setCurrentId] = useState(0);\n  useEffect(() => {\n    props.fetchAllPostMessages();\n  }, []); //DidMount\n\n  const onDelete = id => {\n    console.log(id);\n\n    const onSuccess = () => {}; // props.deletePostMessage(id,onSuccess)\n\n  };\n\n  return React.createElement(Grid, {\n    container: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 5,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    className: classes.paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(PostMessageForm, Object.assign({\n    currentId,\n    setCurrentId\n  }, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  })))), React.createElement(Grid, {\n    item: true,\n    xs: 7,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    className: classes.paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(List, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, props.postMessageList.map((record, index) => {\n    console.log(record, index);\n    return React.createElement(Fragment, {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(ListItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(ListItemText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"h5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, record.title), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, record.message), React.createElement(\"div\", {\n      className: classes.actionDiv,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      size: \"small\",\n      className: classes.smMargin,\n      onClick: () => setCurrentId(record._id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Edit\"), React.createElement(Button, {\n      variant: \"contained\",\n      color: \"secondary\",\n      size: \"small\",\n      className: classes.smMargin,\n      onClick: () => onDelete(record._id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Delete\")))), React.createElement(Divider, {\n      component: \"li\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }));\n  })))));\n};\n\nconst mapStateToProps = state => ({\n  postMessageList: state.postMessage.list\n});\n\nconst mapActionToProps = {\n  fetchAllPostMessages: actions.fetchAll,\n  deletePostMessage: actions.Delete\n};\nexport default connect(mapStateToProps, mapActionToProps)(withStyles(styles)(PostMessages));","map":{"version":3,"sources":["/home/seenam/Desktop/MERN-Stack-CRUD/mern-stack-client/src/components/PostMessages.js"],"names":["React","useEffect","useState","Fragment","connect","actions","Grid","Paper","withStyles","List","ListItem","ListItemText","Typography","Divider","Button","PostMessageForm","styles","theme","paper","margin","spacing","padding","smMargin","actionDiv","textAlign","PostMessages","classes","props","console","log","currentId","setCurrentId","fetchAllPostMessages","onDelete","id","onSuccess","postMessageList","map","record","index","title","message","_id","mapStateToProps","state","postMessage","list","mapActionToProps","fetchAll","deletePostMessage","Delete"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../actions/postMessage\";\nimport { Grid, Paper, withStyles, List, ListItem, ListItemText, Typography, Divider, Button } from \"@material-ui/core\";\nimport PostMessageForm from \"./PostMessageForm\";\n \nconst styles = theme => ({\n    paper: {\n        margin: theme.spacing(3),\n        padding: theme.spacing(2)\n    },\n    smMargin: {\n        margin: theme.spacing(1)\n    },\n    actionDiv: {\n        textAlign: \"center\"\n    }\n})\n\nconst PostMessages = ({ classes, ...props }) => {\nconsole.log(props)\n\n    //const {classes, ...props} = props\n    const [currentId, setCurrentId] = useState(0)\n\n    useEffect(() => {\n        props.fetchAllPostMessages()\n    }, [])//DidMount\n\n    const onDelete = id => {\n        console.log(id)\n        const onSuccess = () => { \n        }\n            // props.deletePostMessage(id,onSuccess)\n    \n}\n\n\n    return (\n        <Grid container>\n            <Grid item xs={5}>\n                <Paper className={classes.paper}>\n                    <PostMessageForm {...{ currentId, setCurrentId }} />\n                </Paper>\n            </Grid>\n            <Grid item xs={7}>\n                <Paper className={classes.paper}>\n                    <List>\n                        {\n                            props.postMessageList.map((record, index) => {\n                                console.log(record,index)\n                                return (\n                                    <Fragment key={index}>\n                                        <ListItem>\n                                            <ListItemText>\n                                                <Typography variant=\"h5\">\n                                                    {record.title}\n                                                </Typography>\n                                                <div>\n                                                    {record.message}\n                                                </div>\n                                                <div className={classes.actionDiv}>\n                                                    <Button variant=\"contained\" color=\"primary\" size=\"small\"\n                                                        className={classes.smMargin}\n                                                        onClick={() => setCurrentId(record._id)}>\n                                                        Edit\n                                                    </Button>\n                                                    <Button variant=\"contained\" color=\"secondary\" size=\"small\"\n                                                        className={classes.smMargin}\n                                                        onClick={() => onDelete(record._id)}>\n                                                        Delete\n                                                    </Button>\n                                                </div>\n                                            </ListItemText>\n                                        </ListItem>\n                                        <Divider component=\"li\" />\n                                    </Fragment>\n                                )\n                            })\n                        }\n                    </List>\n                </Paper>\n            </Grid>\n        </Grid>\n    );\n}\n\nconst mapStateToProps = state => ({\n    postMessageList: state.postMessage.list\n})\n\nconst mapActionToProps = {\n    fetchAllPostMessages: actions.fetchAll,\n    deletePostMessage: actions.Delete\n}\n\nexport default connect(mapStateToProps, mapActionToProps)(withStyles(styles)(PostMessages));\n"]},"metadata":{},"sourceType":"module"}