{"ast":null,"code":"var _jsxFileName = \"/home/seenam/Desktop/MERN-Stack-CRUD/sheenam/src/components/TableUI/TableComponent.js\";\nimport Table from \"antd/es/table\";\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../Redux/postMessage\";\nimport PropTypes from \"prop-types\";\nimport { columns, callBack } from './TableColumn';\n\nconst onSelectChange = (selectedRowKeys, selectedRows) => {\n  console.log(`selectedRowKeys: ${selectedRowKeys}`, \"selectedRows: \", selectedRows);\n};\n\nconst TableComponent = ({ ...props\n}) => {\n  console.log(props);\n  const [currentId, setCurrentId] = useState(0);\n  useEffect(() => {\n    props.fetchAllPostMessages();\n  }, []); //DidMount\n\n  const handle = id => {\n    console.log(id);\n\n    const onSuccess = () => {};\n\n    props.deletePostMessage(id, onSuccess);\n  };\n\n  callBack(handle);\n  console.log(currentId);\n  const rowSelection = {\n    onChange: onSelectChange\n  };\n  const data = props.postMessageList.map((record, index) => {\n    record.key = index;\n    return record;\n  });\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(Table, {\n    rowSelection: rowSelection,\n    columns: columns,\n    dataSource: data,\n    pagination: {\n      position: \"bottomRight\",\n      pageSize: 5\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }));\n};\n\nconst mapStateToProps = state => ({\n  postMessageList: state.postMessage.list\n});\n\nconst mapActionToProps = {\n  fetchAllPostMessages: actions.fetchAll,\n  deletePostMessage: actions.Delete\n};\nTableComponent.propTypes = {\n  data: PropTypes.object,\n  column: PropTypes.array,\n  callBack: PropTypes.func\n};\nexport default connect(mapStateToProps, mapActionToProps)(TableComponent);","map":{"version":3,"sources":["/home/seenam/Desktop/MERN-Stack-CRUD/sheenam/src/components/TableUI/TableComponent.js"],"names":["Table","React","useEffect","useState","connect","actions","PropTypes","columns","callBack","onSelectChange","selectedRowKeys","selectedRows","console","log","TableComponent","props","currentId","setCurrentId","fetchAllPostMessages","handle","id","onSuccess","deletePostMessage","rowSelection","onChange","data","postMessageList","map","record","index","key","position","pageSize","mapStateToProps","state","postMessage","list","mapActionToProps","fetchAll","Delete","propTypes","object","column","array","func"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,eAAlB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA0C,OAA1C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,OAAZ,MAAyB,yBAAzB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,OAAR,EAAiBC,QAAjB,QAAgC,eAAhC;;AAEA,MAAMC,cAAc,GAAG,CAACC,eAAD,EAAkBC,YAAlB,KAAmC;AACxDC,EAAAA,OAAO,CAACC,GAAR,CACG,oBAAmBH,eAAgB,EADtC,EAEE,gBAFF,EAGEC,YAHF;AAKD,CAND;;AAQA,MAAMG,cAAc,GAAG,CAAC,EAAE,GAAGC;AAAL,CAAD,KAAkB;AACvCH,EAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AAEA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4Bd,QAAQ,CAAC,CAAD,CAA1C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,KAAK,CAACG,oBAAN;AACD,GAFQ,EAEN,EAFM,CAAT,CALuC,CAO/B;;AAER,QAAMC,MAAM,GAAIC,EAAD,IAAQ;AACrBR,IAAAA,OAAO,CAACC,GAAR,CAAYO,EAAZ;;AACA,UAAMC,SAAS,GAAG,MAAM,CAAE,CAA1B;;AACAN,IAAAA,KAAK,CAACO,iBAAN,CAAwBF,EAAxB,EAA4BC,SAA5B;AACD,GAJD;;AAKAb,EAAAA,QAAQ,CAACW,MAAD,CAAR;AAEAP,EAAAA,OAAO,CAACC,GAAR,CAAYG,SAAZ;AAGA,QAAMO,YAAY,GAAG;AACnBC,IAAAA,QAAQ,EAAEf;AADS,GAArB;AAIA,QAAMgB,IAAI,GAACV,KAAK,CAACW,eAAN,CAAsBC,GAAtB,CACT,CAACC,MAAD,EAAQC,KAAR,KAAgB;AACdD,IAAAA,MAAM,CAACE,GAAP,GAAaD,KAAb;AACA,WAAOD,MAAP;AACD,GAJQ,CAAX;AAOE,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,oBAAC,KAAD;AAEE,IAAA,YAAY,EAAEL,YAFhB;AAGE,IAAA,OAAO,EAAEhB,OAHX;AAIE,IAAA,UAAU,EAAEkB,IAJd;AAKE,IAAA,UAAU,EAAE;AAAEM,MAAAA,QAAQ,EAAE,aAAZ;AAA2BC,MAAAA,QAAQ,EAAE;AAArC,KALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAaD,CA3CH;;AA8CE,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAClCR,EAAAA,eAAe,EAAEQ,KAAK,CAACC,WAAN,CAAkBC;AADD,CAAZ,CAAxB;;AAIA,MAAMC,gBAAgB,GAAG;AACvBnB,EAAAA,oBAAoB,EAAEb,OAAO,CAACiC,QADP;AAEvBhB,EAAAA,iBAAiB,EAAEjB,OAAO,CAACkC;AAFJ,CAAzB;AAKFzB,cAAc,CAAC0B,SAAf,GAA2B;AAC1Bf,EAAAA,IAAI,EAACnB,SAAS,CAACmC,MADW;AAE1BC,EAAAA,MAAM,EAACpC,SAAS,CAACqC,KAFS;AAG1BnC,EAAAA,QAAQ,EAACF,SAAS,CAACsC;AAHO,CAA3B;AAKA,eAAexC,OAAO,CAAC6B,eAAD,EAAkBI,gBAAlB,CAAP,CAA2CvB,cAA3C,CAAf","sourcesContent":["import Table from \"antd/es/table\";\r\nimport React, { useEffect, useState} from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../Redux/postMessage\";\r\nimport PropTypes from \"prop-types\";\r\nimport {columns, callBack} from './TableColumn';\r\n\r\nconst onSelectChange = (selectedRowKeys, selectedRows) => {\r\n  console.log(\r\n    `selectedRowKeys: ${selectedRowKeys}`,\r\n    \"selectedRows: \",\r\n    selectedRows\r\n  );\r\n};\r\n\r\nconst TableComponent = ({ ...props }) => {\r\n  console.log(props);\r\n\r\n  const [currentId, setCurrentId] = useState(0);\r\n\r\n  useEffect(() => {\r\n    props.fetchAllPostMessages();\r\n  }, []); //DidMount\r\n\r\n  const handle = (id) => {\r\n    console.log(id);\r\n    const onSuccess = () => {};\r\n    props.deletePostMessage(id, onSuccess);\r\n  };\r\n  callBack(handle)\r\n\r\n  console.log(currentId);\r\n \r\n\r\n  const rowSelection = {\r\n    onChange: onSelectChange,\r\n  };\r\n\r\n  const data=props.postMessageList.map(\r\n    (record,index)=>{ \r\n      record.key = index\r\n      return record\r\n    })\r\n\r\n \r\n    return (\r\n      <div>\r\n   \r\n        <Table\r\n         \r\n          rowSelection={rowSelection}\r\n          columns={columns}\r\n          dataSource={data}\r\n          pagination={{ position: \"bottomRight\", pageSize: 5 }}\r\n        />\r\n      </div>\r\n    );\r\n \r\n  };\r\n  \r\n\r\n  const mapStateToProps = (state) => ({\r\n    postMessageList: state.postMessage.list,\r\n  });\r\n  \r\n  const mapActionToProps = {\r\n    fetchAllPostMessages: actions.fetchAll,\r\n    deletePostMessage: actions.Delete,\r\n  };\r\n\r\nTableComponent.propTypes = {\r\n data:PropTypes.object,\r\n column:PropTypes.array,\r\n callBack:PropTypes.func\r\n};\r\nexport default connect(mapStateToProps, mapActionToProps)(TableComponent);\r\n"]},"metadata":{},"sourceType":"module"}