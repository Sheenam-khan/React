{"ast":null,"code":"var _jsxFileName = \"/home/seenam/Desktop/MERN-Stack-CRUD/mern-stack-client/src/components2/TableComponent.js\";\nimport Table from 'antd/es/table';\nimport React, { useEffect, useState, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport ModalComponent from './ModalComponent';\nimport * as actions from \"../actions/postMessage\";\nimport Button from 'antd/es/button';\nimport { EditOutlined, DeleteOutlined } from '@ant-design/icons';\nimport PropTypes from 'prop-types';\nimport FormComponent from './FormComponent';\n\nconst onSelectChange = (selectedRowKeys, selectedRows) => {\n  console.log(`selectedRowKeys: ${selectedRowKeys}`, 'selectedRows: ', selectedRows);\n};\n\nconst TableComponent = ({ ...props\n}) => {\n  console.log(props); //const {classes, ...props} = props\n\n  const [currentId, setCurrentId] = useState(0);\n  useEffect(() => {\n    props.fetchAllPostMessages();\n  }, []); //DidMount\n\n  const onDelete = id => {\n    console.log(id);\n\n    const onSuccess = () => {};\n\n    props.deletePostMessage(id, onSuccess);\n  };\n\n  const onEdit = id => {\n    setCurrentId(id);\n\n    if (id !== 0) {\n      React.createElement(FormComponent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      });\n    }\n  };\n\n  console.log(currentId); // const data= props.postMessageList.map((record, index) => {\n  //     console.log(record,index)\n  //     return (record)\n  // })\n\n  const columns = [{\n    title: 'Title',\n    dataIndex: 'title',\n    key: 'title'\n  }, {\n    title: 'Message',\n    dataIndex: 'message',\n    key: 'message'\n  }, {\n    title: 'Action',\n    dataIndex: 'action',\n    key: 'action',\n    render: (action, record) => React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(Button, {\n      icon: React.createElement(DeleteOutlined, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }),\n      type: \"primary\",\n      onClick: () => onEdit(record._id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Delete\"), React.createElement(Button, {\n      icon: React.createElement(DeleteOutlined, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }),\n      type: \"danger\",\n      onClick: () => onDelete(record._id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Delete\"))\n  }];\n  const rowSelection = {\n    onChange: onSelectChange\n  };\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(Table, {\n    rowSelection: rowSelection,\n    columns: columns,\n    dataSource: props.postMessageList,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }));\n};\n\nconst mapStateToProps = state => ({\n  postMessageList: state.postMessage.list\n});\n\nconst mapActionToProps = {\n  fetchAllPostMessages: actions.fetchAll,\n  deletePostMessage: actions.Delete,\n  editPostMessage: actions.update\n};\nTableComponent.propTypes = {\n  data: PropTypes.array\n};\nexport default connect(mapStateToProps, mapActionToProps)(TableComponent);","map":{"version":3,"sources":["/home/seenam/Desktop/MERN-Stack-CRUD/mern-stack-client/src/components2/TableComponent.js"],"names":["Table","React","useEffect","useState","Fragment","connect","ModalComponent","actions","Button","EditOutlined","DeleteOutlined","PropTypes","FormComponent","onSelectChange","selectedRowKeys","selectedRows","console","log","TableComponent","props","currentId","setCurrentId","fetchAllPostMessages","onDelete","id","onSuccess","deletePostMessage","onEdit","columns","title","dataIndex","key","render","action","record","_id","rowSelection","onChange","postMessageList","mapStateToProps","state","postMessage","list","mapActionToProps","fetchAll","Delete","editPostMessage","update","propTypes","data","array"],"mappings":"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","sourcesContent":["import Table from 'antd/es/table';\r\nimport React, { useEffect, useState, Fragment } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n \r\nimport ModalComponent from './ModalComponent';\r\nimport * as actions from \"../actions/postMessage\"; \r\nimport Button from 'antd/es/button';\r\nimport {\r\n    EditOutlined,DeleteOutlined\r\n  } from '@ant-design/icons';\r\n  import PropTypes from 'prop-types';\r\nimport FormComponent from './FormComponent';\r\n\r\nconst onSelectChange = (selectedRowKeys, selectedRows) => {\r\n    console.log(`selectedRowKeys: ${selectedRowKeys}`, 'selectedRows: ', selectedRows);\r\n}\r\n\r\nconst TableComponent = ({...props}) => {\r\n    console.log(props)\r\n\r\n    //const {classes, ...props} = props\r\n    const [currentId, setCurrentId] = useState(0)\r\n\r\n    useEffect(() => {\r\n        props.fetchAllPostMessages()\r\n    }, [])//DidMount\r\n\r\n    const onDelete = id => {\r\n        console.log(id)\r\n        const onSuccess = () => { \r\n           \r\n    }\r\n    props.deletePostMessage(id,onSuccess)\r\n}\r\n\r\nconst onEdit=id=>{\r\n    setCurrentId(id)\r\n    if(id!==0)\r\n    {<FormComponent/>}\r\n}\r\nconsole.log(currentId)\r\n\r\n// const data= props.postMessageList.map((record, index) => {\r\n//     console.log(record,index)\r\n    \r\n//     return (record)\r\n// })\r\n    const columns = [\r\n       \r\n        {\r\n            title: 'Title',\r\n            dataIndex: 'title',\r\n            key: 'title',\r\n        },\r\n        {\r\n            title: 'Message',\r\n            dataIndex: 'message',\r\n            key: 'message',\r\n        },\r\n       \r\n        {\r\n            title: 'Action',\r\n            dataIndex:'action',\r\n            key: 'action',\r\n            render:(action, record) => (\r\n              \r\n                <span>\r\n                    <Button icon={<DeleteOutlined />} type=\"primary\" onClick={() => onEdit(record._id)}>Delete</Button>\r\n                    <Button icon={<DeleteOutlined />} type=\"danger\" onClick={() => onDelete(record._id)}>Delete</Button>\r\n                </span>\r\n            ),\r\n        },\r\n    ];\r\n\r\n    const rowSelection = {\r\n        onChange: onSelectChange\r\n    }\r\n\r\n   \r\n\r\n    return (\r\n        <div>\r\n            <Table rowSelection={rowSelection} columns={columns} dataSource={props.postMessageList}  />\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    postMessageList: state.postMessage.list\r\n})\r\n\r\nconst mapActionToProps = {\r\n    fetchAllPostMessages: actions.fetchAll,\r\n    deletePostMessage: actions.Delete,\r\n    editPostMessage:actions.update\r\n}\r\n\r\nTableComponent.propTypes = {\r\n    data: PropTypes.array\r\n};\r\nexport default connect(mapStateToProps, mapActionToProps)(TableComponent);\r\n"]},"metadata":{},"sourceType":"module"}