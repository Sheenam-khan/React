{"ast":null,"code":"var _jsxFileName = \"/home/seenam/Desktop/MERN-Stack-CRUD/mern-stack-client/src/components2/TableComponent.js\";\n// import { Table, Tag } from 'antd';\nimport Table from 'antd/es/table';\nimport React, { useEffect, useState, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport FormComponent from './FormComponent';\nimport ModalComponent from './ModalComponent';\nimport * as actions from \"../actions/postMessage\";\nimport Button from 'antd/es/button';\n\nconst onSelectChange = (selectedRowKeys, selectedRows) => {\n  console.log(`selectedRowKeys: ${selectedRowKeys}`, 'selectedRows: ', selectedRows);\n};\n\nconst TableComponent = ({ ...props\n}) => {\n  console.log(props); //const {classes, ...props} = props\n\n  const [currentId, setCurrentId] = useState(0);\n  useEffect(() => {\n    props.fetchAllPostMessages();\n  }, []); //DidMount\n\n  const onDelete = id => {\n    console.log(id);\n\n    const onSuccess = () => {};\n\n    props.deletePostMessage(id, onSuccess);\n  };\n\n  const data = props.postMessageList.map((record, index) => {\n    console.log(record, index);\n    return record;\n  });\n  const columns = [{\n    title: 'Title',\n    dataIndex: 'title',\n    key: 'title'\n  }, {\n    title: 'Message',\n    dataIndex: 'message',\n    key: 'message'\n  }, {\n    title: 'Action',\n    dataIndex: 'action',\n    key: 'action',\n    render: (action, record) => React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, currentId ? React.createElement(ModalComponent, Object.assign({\n      currentId,\n      setCurrentId\n    }, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    })) : '', React.createElement(\"a\", {\n      style: {\n        marginRight: 16\n      },\n      onClick: () => setCurrentId(record._id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Edit\"), React.createElement(Button, {\n      type: \"danger\",\n      onClick: () => onDelete(record._id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Delete\"))\n  }];\n  const rowSelection = {\n    onChange: onSelectChange\n  };\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(Table, {\n    rowSelection: rowSelection,\n    columns: columns,\n    dataSource: data,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }));\n};\n\nconst mapStateToProps = state => ({\n  postMessageList: state.postMessage.list\n});\n\nconst mapActionToProps = {\n  fetchAllPostMessages: actions.fetchAll,\n  deletePostMessage: actions.Delete\n};\nexport default connect(mapStateToProps, mapActionToProps)(TableComponent);","map":{"version":3,"sources":["/home/seenam/Desktop/MERN-Stack-CRUD/mern-stack-client/src/components2/TableComponent.js"],"names":["Table","React","useEffect","useState","Fragment","connect","FormComponent","ModalComponent","actions","Button","onSelectChange","selectedRowKeys","selectedRows","console","log","TableComponent","props","currentId","setCurrentId","fetchAllPostMessages","onDelete","id","onSuccess","deletePostMessage","data","postMessageList","map","record","index","columns","title","dataIndex","key","render","action","marginRight","_id","rowSelection","onChange","mapStateToProps","state","postMessage","list","mapActionToProps","fetchAll","Delete"],"mappings":"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","sourcesContent":[" \r\n// import { Table, Tag } from 'antd';\r\nimport Table from 'antd/es/table';\r\nimport React, { useEffect, useState, Fragment } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport FormComponent from './FormComponent';\r\nimport ModalComponent from './ModalComponent';\r\nimport * as actions from \"../actions/postMessage\"; \r\nimport Button from 'antd/es/button';\r\n\r\nconst onSelectChange = (selectedRowKeys, selectedRows) => {\r\n    console.log(`selectedRowKeys: ${selectedRowKeys}`, 'selectedRows: ', selectedRows);\r\n}\r\n\r\nconst TableComponent = ({...props}) => {\r\n    console.log(props)\r\n\r\n    //const {classes, ...props} = props\r\n    const [currentId, setCurrentId] = useState(0)\r\n\r\n    useEffect(() => {\r\n        props.fetchAllPostMessages()\r\n    }, [])//DidMount\r\n\r\n    const onDelete = id => {\r\n        console.log(id)\r\n        const onSuccess = () => { \r\n           \r\n    }\r\n    props.deletePostMessage(id,onSuccess)\r\n}\r\n\r\nconst data= props.postMessageList.map((record, index) => {\r\n    console.log(record,index)\r\n    \r\n    return (record)\r\n})\r\n    const columns = [\r\n       \r\n        {\r\n            title: 'Title',\r\n            dataIndex: 'title',\r\n            key: 'title',\r\n        },\r\n        {\r\n            title: 'Message',\r\n            dataIndex: 'message',\r\n            key: 'message',\r\n        },\r\n       \r\n        {\r\n            title: 'Action',\r\n            dataIndex:'action',\r\n            key: 'action',\r\n            render:(action, record) => (\r\n              \r\n                <span>\r\n                    {currentId? <ModalComponent  {...{ currentId, setCurrentId }} />:''}\r\n                    \r\n                    <a style={{ marginRight: 16 }}       onClick={() => setCurrentId(record._id)}>Edit</a>\r\n                    <Button type=\"danger\" onClick={() => onDelete(record._id)}>Delete</Button>\r\n                </span>\r\n            ),\r\n        },\r\n    ];\r\n\r\n    const rowSelection = {\r\n        onChange: onSelectChange\r\n    }\r\n\r\n   \r\n\r\n    return (\r\n        <div>\r\n            <Table rowSelection={rowSelection} columns={columns} dataSource={data}  />\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    postMessageList: state.postMessage.list\r\n})\r\n\r\nconst mapActionToProps = {\r\n    fetchAllPostMessages: actions.fetchAll,\r\n    deletePostMessage: actions.Delete\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapActionToProps)(TableComponent);\r\n"]},"metadata":{},"sourceType":"module"}