{"ast":null,"code":"var _jsxFileName = \"/home/seenam/Desktop/MERN-Stack-CRUD/mern-stack-client/src/components2/TableComponent.js\";\n// import { Table, Tag } from 'antd';\nimport Table from 'antd/es/table';\nimport React, { useEffect, useState, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport FormComponent from './components2/FormComponent';\nimport * as actions from \"../actions/postMessage\";\n\nconst onSelectChange = (selectedRowKeys, selectedRows) => {\n  console.log(`selectedRowKeys: ${selectedRowKeys}`, 'selectedRows: ', selectedRows);\n};\n\nconst TableComponent = ({ ...props\n}) => {\n  console.log(props); //const {classes, ...props} = props\n\n  const [currentId, setCurrentId] = useState(0);\n  useEffect(() => {\n    props.fetchAllPostMessages();\n  }, []); //DidMount\n\n  const onDelete = id => {\n    const onSuccess = () => {\n      props.deletePostMessage(id, onSuccess);\n    };\n  };\n\n  const columns = [{\n    title: 'Title',\n    dataIndex: 'title',\n    key: 'title'\n  }, {\n    title: 'Message',\n    dataIndex: 'message',\n    key: 'message'\n  }, {\n    title: 'Action',\n    dataIndex: 'action',\n    key: 'action',\n    render: record => React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      style: {\n        marginRight: 16\n      },\n      onClick: () => setCurrentId(record._id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"Edit\"), React.createElement(\"a\", {\n      onClick: () => onDelete(record._id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"Delete\"))\n  }];\n  const rowSelection = {\n    onChange: onSelectChange\n  };\n  const data = props.postMessageList.map((record, index) => {\n    console.log(record, index);\n    return record;\n  });\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(Table, {\n    rowSelection: rowSelection,\n    columns: columns,\n    dataSource: data,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }), React.createElement(FormComponent, Object.assign({\n    currentId,\n    setCurrentId\n  }, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  })));\n};\n\nconst mapStateToProps = state => ({\n  postMessageList: state.postMessage.list\n});\n\nconst mapActionToProps = {\n  fetchAllPostMessages: actions.fetchAll,\n  deletePostMessage: actions.Delete\n};\nexport default connect(mapStateToProps, mapActionToProps)(TableComponent);","map":{"version":3,"sources":["/home/seenam/Desktop/MERN-Stack-CRUD/mern-stack-client/src/components2/TableComponent.js"],"names":["Table","React","useEffect","useState","Fragment","connect","FormComponent","actions","onSelectChange","selectedRowKeys","selectedRows","console","log","TableComponent","props","currentId","setCurrentId","fetchAllPostMessages","onDelete","id","onSuccess","deletePostMessage","columns","title","dataIndex","key","render","record","marginRight","_id","rowSelection","onChange","data","postMessageList","map","index","mapStateToProps","state","postMessage","list","mapActionToProps","fetchAll","Delete"],"mappings":";AACA;AACA,OAAOA,KAAP,MAAkB,eAAlB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,QAArC,QAAqD,OAArD;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,OAAO,KAAKC,OAAZ,MAAyB,wBAAzB;;AAEA,MAAMC,cAAc,GAAG,CAACC,eAAD,EAAkBC,YAAlB,KAAmC;AACtDC,EAAAA,OAAO,CAACC,GAAR,CAAa,oBAAmBH,eAAgB,EAAhD,EAAmD,gBAAnD,EAAqEC,YAArE;AACH,CAFD;;AAIA,MAAMG,cAAc,GAAG,CAAC,EAAC,GAAGC;AAAJ,CAAD,KAAgB;AACnCH,EAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ,EADmC,CAGnC;;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAC,CAAD,CAA1C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZY,IAAAA,KAAK,CAACG,oBAAN;AACH,GAFQ,EAEN,EAFM,CAAT,CANmC,CAQ7B;;AAEN,QAAMC,QAAQ,GAAGC,EAAE,IAAI;AACnB,UAAMC,SAAS,GAAG,MAAM;AACpBN,MAAAA,KAAK,CAACO,iBAAN,CAAwBF,EAAxB,EAA2BC,SAA3B;AACP,KAFG;AAGP,GAJG;;AAKA,QAAME,OAAO,GAAG,CAEZ;AACIC,IAAAA,KAAK,EAAE,OADX;AAEIC,IAAAA,SAAS,EAAE,OAFf;AAGIC,IAAAA,GAAG,EAAE;AAHT,GAFY,EAOZ;AACIF,IAAAA,KAAK,EAAE,SADX;AAEIC,IAAAA,SAAS,EAAE,SAFf;AAGIC,IAAAA,GAAG,EAAE;AAHT,GAPY,EAaZ;AACIF,IAAAA,KAAK,EAAE,QADX;AAEIC,IAAAA,SAAS,EAAC,QAFd;AAGIC,IAAAA,GAAG,EAAE,QAHT;AAIIC,IAAAA,MAAM,EAAEC,MAAM,IACV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAG,MAAA,KAAK,EAAE;AAAEC,QAAAA,WAAW,EAAE;AAAf,OAAV;AAAqC,MAAA,OAAO,EAAE,MAAMZ,YAAY,CAACW,MAAM,CAACE,GAAR,CAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEI;AAAG,MAAA,OAAO,EAAE,MAAMX,QAAQ,CAACS,MAAM,CAACE,GAAR,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AALR,GAbY,CAAhB;AA0BA,QAAMC,YAAY,GAAG;AACjBC,IAAAA,QAAQ,EAAEvB;AADO,GAArB;AAIA,QAAMwB,IAAI,GAAElB,KAAK,CAACmB,eAAN,CAAsBC,GAAtB,CAA0B,CAACP,MAAD,EAASQ,KAAT,KAAmB;AACrDxB,IAAAA,OAAO,CAACC,GAAR,CAAYe,MAAZ,EAAmBQ,KAAnB;AACA,WAAOR,MAAP;AACH,GAHW,CAAZ;AAIA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AAAO,IAAA,YAAY,EAAEG,YAArB;AAAmC,IAAA,OAAO,EAAER,OAA5C;AAAqD,IAAA,UAAU,EAAEU,IAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEP,oBAAC,aAAD,gBAAoB;AAAEjB,IAAAA,SAAF;AAAaC,IAAAA;AAAb,GAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFO,CADJ;AAMH,CAvDD;;AAwDA,MAAMoB,eAAe,GAAGC,KAAK,KAAK;AAC9BJ,EAAAA,eAAe,EAAEI,KAAK,CAACC,WAAN,CAAkBC;AADL,CAAL,CAA7B;;AAIA,MAAMC,gBAAgB,GAAG;AACrBvB,EAAAA,oBAAoB,EAAEV,OAAO,CAACkC,QADT;AAErBpB,EAAAA,iBAAiB,EAAEd,OAAO,CAACmC;AAFN,CAAzB;AAMA,eAAerC,OAAO,CAAC+B,eAAD,EAAkBI,gBAAlB,CAAP,CAA2C3B,cAA3C,CAAf","sourcesContent":[" \r\n// import { Table, Tag } from 'antd';\r\nimport Table from 'antd/es/table';\r\nimport React, { useEffect, useState, Fragment } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport FormComponent from './components2/FormComponent';\r\nimport * as actions from \"../actions/postMessage\"; \r\n\r\nconst onSelectChange = (selectedRowKeys, selectedRows) => {\r\n    console.log(`selectedRowKeys: ${selectedRowKeys}`, 'selectedRows: ', selectedRows);\r\n}\r\n\r\nconst TableComponent = ({...props}) => {\r\n    console.log(props)\r\n\r\n    //const {classes, ...props} = props\r\n    const [currentId, setCurrentId] = useState(0)\r\n\r\n    useEffect(() => {\r\n        props.fetchAllPostMessages()\r\n    }, [])//DidMount\r\n\r\n    const onDelete = id => {\r\n        const onSuccess = () => { \r\n            props.deletePostMessage(id,onSuccess)\r\n    }\r\n}\r\n    const columns = [\r\n       \r\n        {\r\n            title: 'Title',\r\n            dataIndex: 'title',\r\n            key: 'title',\r\n        },\r\n        {\r\n            title: 'Message',\r\n            dataIndex: 'message',\r\n            key: 'message',\r\n        },\r\n       \r\n        {\r\n            title: 'Action',\r\n            dataIndex:'action',\r\n            key: 'action',\r\n            render: record => (\r\n                <span>\r\n                    <a style={{ marginRight: 16 }}       onClick={() => setCurrentId(record._id)}>Edit</a>\r\n                    <a onClick={() => onDelete(record._id)}>Delete</a>\r\n                </span>\r\n            ),\r\n        },\r\n    ];\r\n\r\n    const rowSelection = {\r\n        onChange: onSelectChange\r\n    }\r\n\r\n    const data= props.postMessageList.map((record, index) => {\r\n        console.log(record,index)\r\n        return record\r\n    })\r\n    return (\r\n        <div>\r\n            <Table rowSelection={rowSelection} columns={columns} dataSource={data} />\r\n <FormComponent  {...{ currentId, setCurrentId }} />\r\n        </div>\r\n    );\r\n};\r\nconst mapStateToProps = state => ({\r\n    postMessageList: state.postMessage.list\r\n})\r\n\r\nconst mapActionToProps = {\r\n    fetchAllPostMessages: actions.fetchAll,\r\n    deletePostMessage: actions.Delete\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapActionToProps)(TableComponent);\r\n"]},"metadata":{},"sourceType":"module"}