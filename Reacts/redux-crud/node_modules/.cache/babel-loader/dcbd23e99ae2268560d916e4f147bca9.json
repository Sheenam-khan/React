{"ast":null,"code":"var _jsxFileName = \"/home/seenam/Desktop/MERN-Stack-CRUD/mern-stack-client/src/components/TableUI/TableComponent.js\";\nimport Table from \"antd/es/table\";\nimport React, { useEffect, useState, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport ModalComponent from \"../Modal/ModalComponent\";\nimport * as actions from \"../../Redux/postMessage\"; // import * as actions from \"../Redux/postAction\";\n\nimport Button from \"antd/es/button\";\nimport { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\nimport PropTypes from \"prop-types\";\n\nconst onSelectChange = (selectedRowKeys, selectedRows) => {\n  console.log(`selectedRowKeys: ${selectedRowKeys}`, \"selectedRows: \", selectedRows);\n};\n\nconst TableComponent = ({ ...props\n}) => {\n  console.log(props);\n  const [currentId, setCurrentId] = useState(0);\n  useEffect(() => {\n    props.fetchAllPostMessages();\n  }, []); //DidMount\n\n  const onDelete = id => {\n    console.log(id);\n\n    const onSuccess = () => {};\n\n    props.deletePostMessage(id, onSuccess);\n  };\n\n  console.log(currentId);\n  const columns = [{\n    title: \"Title\",\n    dataIndex: \"title\",\n    key: \"title\"\n  }, {\n    title: \"Message\",\n    dataIndex: \"message\",\n    key: \"message\"\n  }, {\n    title: \"Action\",\n    dataIndex: \"action\",\n    key: \"action\",\n    render: (action, record, rowIndex) => React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(ModalComponent, {\n      title: \"update\",\n      record: record,\n      index: rowIndex,\n      currentId: record._id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), React.createElement(Button, {\n      icon: React.createElement(DeleteOutlined, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }),\n      type: \"danger\",\n      onClick: () => onDelete(record._id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }))\n  }];\n  const rowSelection = {\n    onChange: onSelectChange\n  };\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(Table, {\n    key: Math.random() * 12,\n    rowSelection: rowSelection,\n    columns: columns,\n    dataSource: props.postMessageList,\n    pagination: {\n      position: \"bottomRight\",\n      pageSize: 5\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }));\n};\n\nconst mapStateToProps = state => ({\n  postMessageList: state.postMessage.list\n});\n\nconst mapActionToProps = {\n  fetchAllPostMessages: actions.fetchAll,\n  deletePostMessage: actions.Delete\n};\nTableComponent.propTypes = {\n  data: PropTypes.array\n};\nexport default connect(mapStateToProps, mapActionToProps)(TableComponent);","map":{"version":3,"sources":["/home/seenam/Desktop/MERN-Stack-CRUD/mern-stack-client/src/components/TableUI/TableComponent.js"],"names":["Table","React","useEffect","useState","Fragment","connect","ModalComponent","actions","Button","EditOutlined","DeleteOutlined","PropTypes","onSelectChange","selectedRowKeys","selectedRows","console","log","TableComponent","props","currentId","setCurrentId","fetchAllPostMessages","onDelete","id","onSuccess","deletePostMessage","columns","title","dataIndex","key","render","action","record","rowIndex","_id","rowSelection","onChange","Math","random","postMessageList","position","pageSize","mapStateToProps","state","postMessage","list","mapActionToProps","fetchAll","Delete","propTypes","data","array"],"mappings":"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","sourcesContent":["import Table from \"antd/es/table\";\r\nimport React, { useEffect, useState, Fragment } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport ModalComponent from \"../Modal/ModalComponent\";\r\nimport * as actions from \"../../Redux/postMessage\";\r\n// import * as actions from \"../Redux/postAction\";\r\nimport Button from \"antd/es/button\";\r\nimport { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst onSelectChange = (selectedRowKeys, selectedRows) => {\r\n  console.log(\r\n    `selectedRowKeys: ${selectedRowKeys}`,\r\n    \"selectedRows: \",\r\n    selectedRows\r\n  );\r\n};\r\n\r\nconst TableComponent = ({ ...props }) => {\r\n  console.log(props);\r\n\r\n  const [currentId, setCurrentId] = useState(0);\r\n\r\n  useEffect(() => {\r\n    props.fetchAllPostMessages();\r\n  }, []); //DidMount\r\n\r\n  const onDelete = (id) => {\r\n    console.log(id);\r\n    const onSuccess = () => {};\r\n    props.deletePostMessage(id, onSuccess);\r\n  };\r\n\r\n  console.log(currentId);\r\n\r\n  const columns = [\r\n    {\r\n      title: \"Title\",\r\n      dataIndex: \"title\",\r\n      key: \"title\",\r\n    },\r\n    {\r\n      title: \"Message\",\r\n      dataIndex: \"message\",\r\n      key: \"message\",\r\n    },\r\n\r\n    {\r\n      title: \"Action\",\r\n      dataIndex: \"action\",\r\n      key: \"action\",\r\n      render: (action, record, rowIndex) => (\r\n        <span>\r\n          <ModalComponent\r\n            title=\"update\"\r\n            record={record}\r\n            index={rowIndex}\r\n            currentId={record._id}\r\n          >\r\n            {/* <FormComponent type=\"update\" record={record} index={rowIndex} /> */}\r\n          </ModalComponent>\r\n          <Button\r\n            icon={<DeleteOutlined />}\r\n            type=\"danger\"\r\n            onClick={() => onDelete(record._id)}\r\n          />\r\n        </span>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const rowSelection = {\r\n    onChange: onSelectChange,\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Table\r\n       key={Math.random()*12}\r\n        rowSelection={rowSelection}\r\n        columns={columns}\r\n        dataSource={props.postMessageList}\r\n        pagination={{ position: \"bottomRight\", pageSize: 5 }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  postMessageList: state.postMessage.list,\r\n});\r\n\r\nconst mapActionToProps = {\r\n  fetchAllPostMessages: actions.fetchAll,\r\n  deletePostMessage: actions.Delete,\r\n};\r\n\r\nTableComponent.propTypes = {\r\n  data: PropTypes.array,\r\n \r\n};\r\nexport default connect(mapStateToProps, mapActionToProps)(TableComponent);\r\n"]},"metadata":{},"sourceType":"module"}