{"ast":null,"code":"var _jsxFileName = \"/home/seenam/Desktop/MERN-Stack-CRUD/mern-stack-client/src/components/TableUI/TableComponent.js\";\nimport Table from \"antd/es/table\";\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../Redux/postMessage\";\nimport PropTypes from \"prop-types\";\nimport { columns, callBack } from './TableColumn';\n\nconst mapStateToProps = state => ({\n  postMessageList: state.postMessage.list\n});\n\nconst mapActionToProps = {\n  fetchAllPostMessages: actions.fetchAll,\n  deletePostMessage: actions.Delete\n};\n\nconst TableComponent = ({ ...props\n}) => {\n  console.log(props);\n  const [currentId, setCurrentId] = useState(0);\n  useEffect(() => {\n    props.fetchAllPostMessages();\n  }, []); //DidMount\n\n  const handle = id => {\n    console.log(id);\n\n    const onSuccess = () => {};\n\n    props.deletePostMessage(id, onSuccess);\n  };\n\n  console.log(currentId);\n\n  const onSelectChange = (selectedRowKeys, selectedRows) => {\n    console.log(`selectedRowKeys: ${selectedRowKeys}`, \"selectedRows: \", selectedRows);\n  };\n\n  const rowSelection = {\n    onChange: onSelectChange\n  };\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(Table, {\n    rowSelection: rowSelection,\n    columns: columns,\n    dataSource: props.postMessageList,\n    pagination: {\n      position: \"bottomRight\",\n      pageSize: 5\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }));\n};\n\nTableComponent.propTypes = {\n  data: PropTypes.array,\n  columns: PropTypes.array,\n  callBack: PropTypes.func\n};\nexport default connect(mapStateToProps, mapActionToProps)(TableComponent);","map":{"version":3,"sources":["/home/seenam/Desktop/MERN-Stack-CRUD/mern-stack-client/src/components/TableUI/TableComponent.js"],"names":["Table","React","useEffect","useState","connect","actions","PropTypes","columns","callBack","mapStateToProps","state","postMessageList","postMessage","list","mapActionToProps","fetchAllPostMessages","fetchAll","deletePostMessage","Delete","TableComponent","props","console","log","currentId","setCurrentId","handle","id","onSuccess","onSelectChange","selectedRowKeys","selectedRows","rowSelection","onChange","position","pageSize","propTypes","data","array","func"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,eAAlB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA0C,OAA1C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,OAAZ,MAAyB,yBAAzB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,OAAR,EAAgBC,QAAhB,QAA+B,eAA/B;;AAGA,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAClCC,EAAAA,eAAe,EAAED,KAAK,CAACE,WAAN,CAAkBC;AADD,CAAZ,CAAxB;;AAIA,MAAMC,gBAAgB,GAAG;AACvBC,EAAAA,oBAAoB,EAAEV,OAAO,CAACW,QADP;AAEvBC,EAAAA,iBAAiB,EAAEZ,OAAO,CAACa;AAFJ,CAAzB;;AAMA,MAAMC,cAAc,GAAG,CAAC,EAAC,GAAGC;AAAJ,CAAD,KAAgB;AACrCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AAEA,QAAM,CAACG,SAAD,EAAYC,YAAZ,IAA4BrB,QAAQ,CAAC,CAAD,CAA1C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdkB,IAAAA,KAAK,CAACL,oBAAN;AACD,GAFQ,EAEN,EAFM,CAAT,CALqC,CAO7B;;AAER,QAAMU,MAAM,GAAIC,EAAD,IAAQ;AACrBL,IAAAA,OAAO,CAACC,GAAR,CAAYI,EAAZ;;AACA,UAAMC,SAAS,GAAG,MAAM,CAAE,CAA1B;;AACAP,IAAAA,KAAK,CAACH,iBAAN,CAAwBS,EAAxB,EAA4BC,SAA5B;AACD,GAJD;;AAQAN,EAAAA,OAAO,CAACC,GAAR,CAAYC,SAAZ;;AAEA,QAAMK,cAAc,GAAG,CAACC,eAAD,EAAkBC,YAAlB,KAAmC;AACxDT,IAAAA,OAAO,CAACC,GAAR,CACG,oBAAmBO,eAAgB,EADtC,EAEE,gBAFF,EAEoBC,YAFpB;AAID,GALD;;AAMA,QAAMC,YAAY,GAAG;AACnBC,IAAAA,QAAQ,EAAEJ;AADS,GAArB;AAKA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAEE,IAAA,YAAY,EAAEG,YAFhB;AAGE,IAAA,OAAO,EAAExB,OAHX;AAIE,IAAA,UAAU,EAAEa,KAAK,CAACT,eAJpB;AAKE,IAAA,UAAU,EAAE;AAAEsB,MAAAA,QAAQ,EAAE,aAAZ;AAA2BC,MAAAA,QAAQ,EAAE;AAArC,KALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAWD,CAzCD;;AA4CAf,cAAc,CAACgB,SAAf,GAA2B;AACzBC,EAAAA,IAAI,EAAE9B,SAAS,CAAC+B,KADS;AAE1B9B,EAAAA,OAAO,EAACD,SAAS,CAAC+B,KAFQ;AAG1B7B,EAAAA,QAAQ,EAACF,SAAS,CAACgC;AAHO,CAA3B;AAKA,eAAelC,OAAO,CAACK,eAAD,EAAkBK,gBAAlB,CAAP,CAA2CK,cAA3C,CAAf","sourcesContent":["import Table from \"antd/es/table\";\r\nimport React, { useEffect, useState} from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../Redux/postMessage\";\r\nimport PropTypes from \"prop-types\";\r\nimport {columns,callBack} from './TableColumn';\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n  postMessageList: state.postMessage.list,\r\n});\r\n\r\nconst mapActionToProps = {\r\n  fetchAllPostMessages: actions.fetchAll,\r\n  deletePostMessage: actions.Delete,\r\n};\r\n\r\n\r\nconst TableComponent = ({...props}) => {\r\n  console.log(props);\r\n\r\n  const [currentId, setCurrentId] = useState(0);\r\n\r\n  useEffect(() => {\r\n    props.fetchAllPostMessages();\r\n  }, []); //DidMount\r\n\r\n  const handle = (id) => {\r\n    console.log(id);\r\n    const onSuccess = () => {};\r\n    props.deletePostMessage(id, onSuccess);\r\n  };\r\n  \r\n\r\n\r\n  console.log(currentId);\r\n\r\n  const onSelectChange = (selectedRowKeys, selectedRows) => {\r\n    console.log(\r\n      `selectedRowKeys: ${selectedRowKeys}`,\r\n      \"selectedRows: \", selectedRows\r\n    );\r\n  };\r\n  const rowSelection = {\r\n    onChange: onSelectChange,\r\n  };\r\n  \r\n  \r\n  return (\r\n    <div>\r\n      <Table\r\n \r\n        rowSelection={rowSelection}\r\n        columns={columns}\r\n        dataSource={props.postMessageList}\r\n        pagination={{ position: \"bottomRight\", pageSize: 5 }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nTableComponent.propTypes = {\r\n  data: PropTypes.array,\r\n columns:PropTypes.array,\r\n callBack:PropTypes.func\r\n};\r\nexport default connect(mapStateToProps, mapActionToProps)(TableComponent);\r\n"]},"metadata":{},"sourceType":"module"}